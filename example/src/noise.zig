const std = @import("std");

fn grad(hash: u8, x: f32, y: f32) f32 {
    const h = hash & 3;
    const u = if (h < 2) x else y;
    const v = if (h < 1 or h == 2) y else x;
    return (if (h & 1 == 0) u else -u) + (if (h & 2 == 0) v else -v);
}

const p = [_]u8{
    151, 160, 137, 91,  90,  15,  131, 13,  201, 95,  96,  53,  194, 233, 7,   225, 140, 36,  103, 30,  69,  142,
    8,   99,  37,  240, 21,  10,  23,  190, 6,   148, 247, 120, 234, 75,  0,   26,  197, 62,  94,  252, 219, 203,
    117, 35,  11,  32,  57,  177, 33,  88,  237, 149, 56,  87,  179, 107, 60,  241, 104, 250, 64,  19,  184, 172,
    112, 167, 121, 58,  77,  66,  170, 126, 169, 146, 202, 98,  79,  228, 113, 106, 189, 54,  243, 85,  204, 171,
    14,  176, 115, 122, 141, 183, 78,  68,  150, 42,  135, 100, 254, 1,   2,   4,   205, 208, 222, 242, 218, 166,
    124, 116, 76,  114, 185, 129, 65,  143, 9,   207, 157, 178, 155, 61,  238, 83,  145, 18,  173, 248, 161, 182,
    118, 20,  246, 153, 25,  235, 84,  12,  196, 251, 223, 110, 123, 253, 200, 175, 49,  195, 168, 152, 27,  82,
    188, 59,  187, 229, 217, 192, 125, 89,  211, 92,  45,  164, 46,  215, 231, 227, 214, 163, 109, 44,  101, 186,
    210, 193, 102, 162, 191, 158, 232, 105, 239, 165, 154, 133, 244, 212, 199, 174, 181, 22,  134, 40,  156, 16,
    226, 209, 213, 28,  70,  72,  249, 206, 236, 130, 41,  138, 220, 71,  128, 67,  139, 136, 81,  50,  108, 17,
    28,  198, 74,  147, 48,  159, 86,  100, 254, 1,   2,   4,   205, 208, 222, 242, 218, 166, 124, 116, 76,  114,
    185, 129, 65,  143, 9,   207, 157, 178, 155, 61,  238, 83,  145, 18,  173, 248, 161, 182, 118, 20,  246, 153,
    25,  235, 84,  12,  196, 251, 223, 110, 123, 253, 200, 175, 49,  195, 168, 152, 27,  82,  188, 59,  187, 229,
    217, 192, 125, 89,  211, 92,  45,  164, 46,  215, 231, 227, 214, 163, 109, 44,  101, 186, 210, 193, 102, 162,
    191, 158, 232, 105, 239, 165, 154, 133, 244, 212, 199, 174, 181, 22,  134, 40,  156, 16,  226, 209, 213, 28,
    70,  72,  249, 206, 236, 130, 41,  138, 220, 71,  128, 67,  139, 136, 81,  50,  108, 17,  28,  198, 74,  147,
    48,  159, 86,
};

pub fn noise(x: f32, y: f32) f32 {
    const floor_x = std.math.floor(x);
    const floor_y = std.math.floor(y);
    const X = @as(u8, @intFromFloat(@mod(@abs(floor_x), 256.0)));
    const Y = @as(u8, @intFromFloat(@mod(@abs(floor_y), 256.0)));

    const x_fract = x - floor_x;
    const y_fract = y - floor_y;

    const u = x_fract * x_fract * x_fract * (x_fract * (x_fract * 6.0 - 15.0) + 10.0);
    const v = y_fract * y_fract * y_fract * (y_fract * (y_fract * 6.0 - 15.0) + 10.0);

    const A = p[X] +% Y;
    const B = p[X +% 1] +% Y;
    const a_idx = p[A & 255];
    const b_idx = p[B & 255];
    const aa = p[a_idx];
    const ab = p[a_idx + 1];
    const ba = p[b_idx];
    const bb = p[b_idx + 1];

    const grad_aa = grad(aa, x_fract, y_fract);
    const grad_ba = grad(ba, x_fract - 1.0, y_fract);
    const grad_ab = grad(ab, x_fract, y_fract - 1.0);
    const grad_bb = grad(bb, x_fract - 1.0, y_fract - 1.0);

    const lerp_x1 = (1.0 - u) * grad_aa + u * grad_ba;
    const lerp_x2 = (1.0 - u) * grad_ab + u * grad_bb;

    return ((1.0 - v) * lerp_x1 + v * lerp_x2);
}
